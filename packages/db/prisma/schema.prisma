// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id      Int     @id @default(autoincrement())
  email   String  @unique
  password String
  name     String
  photo    String?
  rooms    Room[]
  chats    Chat[]
  members  member[]
}

model Room {
  id        Int     @id @default(autoincrement())
  slug      String  @unique
  createdAt DateTime @default(now())
  isCollaborative Boolean  @default(false)
  adminId   Int
  admin     User     @relation(fields: [adminId], references: [id], onDelete: Cascade)
  chats     Chat[]
  members   member[]
}

model member {
  id   Int @id @default(autoincrement())
  roomId Int 
  userId Int
  room   Room @relation(fields: [roomId], references: [id], onDelete: Cascade)
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Chat {
  id         Int    @id @default(autoincrement())
  type       String 
  x1         Float?
  x2         Float?
  y1         Float?
  y2         Float?
  width      Float?
  height     Float?
  radius     Float?
  points     Json?
  createdAt  DateTime @default(now())
  roomId     Int
  userId     Int
  room       Room  @relation(fields: [roomId], references:[id], onDelete: Cascade)
  user       User  @relation(fields: [userId], references: [id], onDelete: Cascade)
} 